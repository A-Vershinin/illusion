// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$fb-hover-name: 'fb-hover';
$fb-hover-x: 0px;
$fb-hover-y: 0px;
$fb-hover-offset-x: 0px;
$fb-hover-offset-y: 0px;
$fb-hover-width: 31px;
$fb-hover-height: 30px;
$fb-hover-total-width: 488px;
$fb-hover-total-height: 30px;
$fb-hover-image: 'icons-sprite.png';
$fb-hover: (0px, 0px, 0px, 0px, 31px, 30px, 488px, 30px, 'icons-sprite.png', 'fb-hover', );
$fb-name: 'fb';
$fb-x: 91px;
$fb-y: 0px;
$fb-offset-x: -91px;
$fb-offset-y: 0px;
$fb-width: 31px;
$fb-height: 30px;
$fb-total-width: 488px;
$fb-total-height: 30px;
$fb-image: 'icons-sprite.png';
$fb: (91px, 0px, -91px, 0px, 31px, 30px, 488px, 30px, 'icons-sprite.png', 'fb', );
$tw-hover-name: 'tw-hover';
$tw-hover-x: 182px;
$tw-hover-y: 0px;
$tw-hover-offset-x: -182px;
$tw-hover-offset-y: 0px;
$tw-hover-width: 31px;
$tw-hover-height: 30px;
$tw-hover-total-width: 488px;
$tw-hover-total-height: 30px;
$tw-hover-image: 'icons-sprite.png';
$tw-hover: (182px, 0px, -182px, 0px, 31px, 30px, 488px, 30px, 'icons-sprite.png', 'tw-hover', );
$tw-name: 'tw';
$tw-x: 273px;
$tw-y: 0px;
$tw-offset-x: -273px;
$tw-offset-y: 0px;
$tw-width: 31px;
$tw-height: 30px;
$tw-total-width: 488px;
$tw-total-height: 30px;
$tw-image: 'icons-sprite.png';
$tw: (273px, 0px, -273px, 0px, 31px, 30px, 488px, 30px, 'icons-sprite.png', 'tw', );
$vk-hover-name: 'vk-hover';
$vk-hover-x: 364px;
$vk-hover-y: 0px;
$vk-hover-offset-x: -364px;
$vk-hover-offset-y: 0px;
$vk-hover-width: 32px;
$vk-hover-height: 30px;
$vk-hover-total-width: 488px;
$vk-hover-total-height: 30px;
$vk-hover-image: 'icons-sprite.png';
$vk-hover: (364px, 0px, -364px, 0px, 32px, 30px, 488px, 30px, 'icons-sprite.png', 'vk-hover', );
$vk-name: 'vk';
$vk-x: 456px;
$vk-y: 0px;
$vk-offset-x: -456px;
$vk-offset-y: 0px;
$vk-width: 32px;
$vk-height: 30px;
$vk-total-width: 488px;
$vk-total-height: 30px;
$vk-image: 'icons-sprite.png';
$vk: (456px, 0px, -456px, 0px, 32px, 30px, 488px, 30px, 'icons-sprite.png', 'vk', );
$spritesheet-width: 488px;
$spritesheet-height: 30px;
$spritesheet-image: 'icons-sprite.png';
$spritesheet-sprites: ($fb-hover, $fb, $tw-hover, $tw, $vk-hover, $vk, );
$spritesheet: (488px, 30px, 'icons-sprite.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
